{"ast":null,"code":"var _jsxFileName = \"/home/sairaj_naik/Documents/reactapps/voucherbooking/src/pages/EventList.js\";\nimport { render } from '@testing-library/react';\nimport React from 'react';\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EventList extends React.Component {\n  // Constructor\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      DataisLoaded: false\n    };\n  } // ComponentDidMount is used to\n  // execute the code\n  // get the data from the postman api and display the event of the specified date\n\n\n  componentDidMount() {\n    let date = \"31-12-2021\";\n    fetch(`http://139.59.63.178:5454/api/customer/getallpublishedevents?Date=${date}`, {\n      method: 'get',\n      headers: {\n        'Authorization': 'SEdRYnN6ZFFFRjpuc0oySXQ0NWt5',\n        'AppVersion': '1.0.0',\n        'AuthToken': 'bd8382d5-3adf-11eb-9263-b62d5e046812',\n        'Accept-Encoding': 'gzip, deflate, br'\n      }\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        items: json,\n        DataisLoaded: true\n      });\n    });\n  }\n\n  render() {\n    const {\n      DataisLoaded,\n      items\n    } = this.state;\n    if (!DataisLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Please wait some time.... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 4\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }, this);\n    console.log(items.Details);\n    let eventItems = [];\n\n    for (var i = 0; i < items.Details.length; i++) eventItems.push( /*#__PURE__*/_jsxDEV(EventItem, {\n      eventitemdetails: items.Details[i]\n    }, items.Details[i].EventReference, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 20\n    }, this));\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Events \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: eventItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\nexport default EventList;","map":{"version":3,"sources":["/home/sairaj_naik/Documents/reactapps/voucherbooking/src/pages/EventList.js"],"names":["render","React","EventItem","EventList","Component","constructor","props","state","items","DataisLoaded","componentDidMount","date","fetch","method","headers","then","res","json","setState","console","log","Details","eventItems","i","length","push","EventReference"],"mappings":";AAAA,SAASA,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAGA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AAEtC;AACDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACZC,MAAAA,KAAK,EAAE,EADK;AAEZC,MAAAA,YAAY,EAAE;AAFF,KAAb;AAIA,GAVsC,CAYvC;AACA;AACA;;;AACAC,EAAAA,iBAAiB,GAAG;AAEnB,QAAIC,IAAI,GAAG,YAAX;AAEAC,IAAAA,KAAK,CAAE,qEAAoED,IAAK,EAA3E,EAA8E;AAClFE,MAAAA,MAAM,EAAE,KAD0E;AAElFC,MAAAA,OAAO,EAAE;AACR,yBAAiB,8BADT;AAER,sBAAc,OAFN;AAGR,qBAAa,sCAHL;AAIR,2BAAmB;AAJX;AAFyE,KAA9E,CAAL,CASEC,IATF,CASQC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAThB,EAUEF,IAVF,CAUQE,IAAD,IAAU;AACf,WAAKC,QAAL,CAAc;AACbV,QAAAA,KAAK,EAAES,IADM;AAEbR,QAAAA,YAAY,EAAE;AAFD,OAAd;AAIA,KAfF;AAgBC;;AAGFT,EAAAA,MAAM,GAAG;AACR,UAAM;AAAES,MAAAA,YAAF;AAAgBD,MAAAA;AAAhB,QAA0B,KAAKD,KAArC;AACA,QAAI,CAACE,YAAL,EAAmB,oBAAO;AAAA,8BACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADyB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAGnBU,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACa,OAAlB;AAEA,QAAIC,UAAU,GAAG,EAAjB;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACf,KAAK,CAACa,OAAN,CAAcG,MAA5B,EAAmCD,CAAC,EAApC,EACCD,UAAU,CAACG,IAAX,eAAgB,QAAC,SAAD;AAAmD,MAAA,gBAAgB,EAAGjB,KAAK,CAACa,OAAN,CAAcE,CAAd;AAAtE,OAAiBf,KAAK,CAACa,OAAN,CAAcE,CAAd,EAAiBG,cAAlC;AAAA;AAAA;AAAA;AAAA,YAAhB;;AAED,wBACA;AAAK,MAAA,SAAS,EAAG,KAAjB;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACG;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,oBACAJ;AADA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAUD;;AA3DuC;;AA8DxC,eAAenB,SAAf","sourcesContent":["import { render } from '@testing-library/react';\nimport React from 'react';\nimport EventItem from '../components/EventItem';\n\n\nclass EventList extends React.Component {\n\n  // Constructor\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\titems: [],\n\t\t\tDataisLoaded: false\n\t\t};\n\t}\n\n\t// ComponentDidMount is used to\n\t// execute the code\n\t// get the data from the postman api and display the event of the specified date\n\tcomponentDidMount() {\n\n\t\tlet date = \"31-12-2021\";\n\n\t\tfetch(`http://139.59.63.178:5454/api/customer/getallpublishedevents?Date=${date}`, {\n\t\t\tmethod: 'get',\n\t\t\theaders: {\n\t\t\t\t'Authorization': 'SEdRYnN6ZFFFRjpuc0oySXQ0NWt5',\n\t\t\t\t'AppVersion': '1.0.0',\n\t\t\t\t'AuthToken': 'bd8382d5-3adf-11eb-9263-b62d5e046812',\n\t\t\t\t'Accept-Encoding': 'gzip, deflate, br',\n\t\t\t}\n\t\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((json) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\titems: json,\n\t\t\t\t\tDataisLoaded: true\n\t\t\t\t});\n\t\t\t})\n\t\t}\n\n  \n\trender() {\n\t\tconst { DataisLoaded, items } = this.state;\n\t\tif (!DataisLoaded) return <div>\n\t\t\t<h1> Please wait some time.... </h1> </div> ;\n\n\t\tconsole.log(items.Details);\n\n\t\tlet eventItems = [];\n\t\tfor(var i=0;i<items.Details.length;i++)\n\t\t\teventItems.push(<EventItem key={ items.Details[i].EventReference } eventitemdetails={ items.Details[i] } />);\n\n\t\treturn (\n\t\t<div className = \"App\">\n\t\t\t<h1> Events </h1> \n\t\t\t<div className=\"container\">\n  \t\t\t\t<div className=\"row\">\n\t\t\t\t\t{eventItems}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n}\n\nexport default EventList"]},"metadata":{},"sourceType":"module"}